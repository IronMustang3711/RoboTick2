#This cmake script is intended to work on projects already generated by eclipse.

#ide notes
#CLion : for deploying to work, make sure the generation path in cmake settings points to ./Debug
#XCode : creating an xcode project works, but building from within the ide doesnt :-(
# mkdir xcode && cd xcode && cmake -G Xcode ..
#other: maybe try -DCMAKE_EXPORT_COMPILE_COMMANDS=1 with ninja/makefile builds?

cmake_minimum_required(VERSION 2.8)
set(ARM_PREFIX arm-frc-linux-gnueabi)
set(CMAKE_SYSTEM_NAME Linux)

SET(CMAKE_CXX_COMPILER ${ARM_PREFIX}-g++)
SET(CMAKE_C_COMPILER ${ARM_PREFIX}-gcc)
#TODO: add -Wno-unknown-warning-option for xcode
set(CMAKE_CXX_FLAGS "-std=c++1y -pthread -Wformat=2 -Wall -Wno-unused-but-set-parameter -Wextra -pedantic -Wno-psabi" CACHE STRING "" FORCE)
set(CMAKE_CXX_FLAGS_DEBUG "-O0 -g3" CACHE STRING "" FORCE)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -g" CACHE STRING "" FORCE) # still want debugging for release?

get_filename_component(PROJECT_NAME ${CMAKE_CURRENT_SOURCE_DIR} NAME)
project(${PROJECT_NAME})



#set(WPI_DIR "$ENV{HOME}/wpilib")
set(WPI_DIR "/Users/jason/wpilib")

include_directories(
        "${WPI_DIR}/cpp/current/include"
        "${WPI_DIR}/user/cpp/include")


  link_directories(
		"${WPI_DIR}/common/current/lib/linux/athena/shared"
        "${WPI_DIR}/cpp/current/reflib/linux/athena/shared"
        "${WPI_DIR}/user/cpp/lib")




#arm-frc-linux-gnueabi-g++ -std=c++1y "-IC:\\Users\\jason/wpilib/cpp/current/include" "-IC:\\Users\\jason\\eclipse\\photon\\tmp_ws\\EncoderTest\\src" "-IC:\\Users\\jason/wpilib/user/cpp/include" -O0 -Og -g3 -Wall -c -fmessage-length=0 -pthread -o "src\\Robot.o" "..\\src\\Robot.cpp" 
#arm-frc-linux-gnueabi-g++ "-LC:\\Users\\jason/wpilib/common/current/lib/linux/athena/shared" "-LC:\\Users\\jason/wpilib/cpp/current/reflib/linux/athena/shared" "-LC:\\Users\\jason/wpilib/user/cpp/lib" -pthread -rdynamic -Wl,-rpath,/opt/GenICam_v3_0_NI/bin/Linux32_ARM,-rpath,/usr/local/frc/lib -o FRCUserProgram "src\\Robot.o" -lCTRE_Phoenix -lCTRE_PhoenixCCI -lnavx_frc_cpp -lwpi 


set(CMAKE_INSTALL_RPATH "/opt/GenICam_v2_3/bin/Linux_armv7-a" "/usr/local/frc/rpath-lib")



file(GLOB_RECURSE SOURCE_FILES src/*.cpp)





#add_executable(${PROJECT_NAME} ${SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} wpi)

add_executable(FRCUserProgram ${SOURCE_FILES})
target_link_libraries(FRCUserProgram pathfinder CTRE_Phoenix CTRE_PhoenixCCI navx_frc_cpp wpi) #TODO add additional libs here


add_custom_target("deploy"
        COMMAND ant -f ${CMAKE_CURRENT_SOURCE_DIR}/build.xml
        DEPENDS FRCUserProgram)



# additional target to perform clang-format run, requires clang-format

# get all project files
file(GLOB_RECURSE ALL_SOURCE_FILES *.cpp *.h)


add_custom_target(
        clangformat
        COMMAND clang-format
        -style=file
        -i
        ${ALL_SOURCE_FILES}
)

